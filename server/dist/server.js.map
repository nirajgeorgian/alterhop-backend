{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./config/config/configConfig.js","webpack:///./config/config/configFiles/config.dev.js","webpack:///./config/config/configFiles/config.prod.js","webpack:///./config/config/configFiles/config.test.js","webpack:///./config/env/env.js","webpack:///./config/index.js","webpack:///./config/logs/logs.js","webpack:///(webpack)/hot/log-apply-result.js","webpack:///(webpack)/hot/log.js","webpack:///(webpack)/hot/poll.js","webpack:///./src/db.js","webpack:///./src/graphql.js","webpack:///./src/index.js","webpack:///./src/middlewares/cors.js","webpack:///./src/middlewares/hosts.js","webpack:///./src/middlewares/ignReq.js","webpack:///./src/middlewares/index.js","webpack:///./src/middlewares/jwt.js","webpack:///./src/middlewares/security.js","webpack:///./src/middlewares/toobussy.js","webpack:///./src/resources/applyJob/applyJob.graphql.js","webpack:///./src/resources/company/company.graphql.js","webpack:///./src/resources/company/company.model.js","webpack:///./src/resources/company/company.resolver.mutations.js","webpack:///./src/resources/email/email.graphql.js","webpack:///./src/resources/email/email.resolver.js","webpack:///./src/resources/jobs/jobs.graphql.js","webpack:///./src/resources/jobs/jobs.model.js","webpack:///./src/resources/jobs/jobs.resolver.mutations.js","webpack:///./src/resources/organization/organisation.resolver.mutations.js","webpack:///./src/resources/organization/organization.graphql.js","webpack:///./src/resources/organization/organization.model.js","webpack:///./src/resources/payment/payment.graphql.js","webpack:///./src/resources/user/user.graphql.js","webpack:///./src/resources/user/user.model.js","webpack:///./src/resources/user/user.resolver.mutations.js","webpack:///./src/resources/user/user.resolver.query.js","webpack:///./src/resources/utils/helper.js","webpack:///./src/resources/utils/jwt.auth.js","webpack:///./src/resources/utils/resuleGenerate.js","webpack:///./src/resources/utils/resultUser.js","webpack:///./src/resources/utils/tokenGenerate.js","webpack:///./src/server.js","webpack:///external \"@sendgrid/mail\"","webpack:///external \"@sentry/node\"","webpack:///external \"apollo-engine\"","webpack:///external \"apollo-server-express\"","webpack:///external \"babel-runtime/core-js/object/keys\"","webpack:///external \"babel-runtime/core-js/promise\"","webpack:///external \"babel-runtime/helpers/asyncToGenerator\"","webpack:///external \"babel-runtime/helpers/defineProperty\"","webpack:///external \"babel-runtime/helpers/taggedTemplateLiteral\"","webpack:///external \"babel-runtime/regenerator\"","webpack:///external \"body-parser\"","webpack:///external \"cluster\"","webpack:///external \"compression\"","webpack:///external \"cors\"","webpack:///external \"crypto\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"graphql\"","webpack:///external \"graphql-log\"","webpack:///external \"helmet\"","webpack:///external \"host-validation\"","webpack:///external \"hpp\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"lodash\"","webpack:///external \"logrocket\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"redis\"","webpack:///external \"rotating-file-stream\"","webpack:///external \"sequelize\"","webpack:///external \"toobusy-js\"","webpack:///external \"util\""],"names":["configConfig","env","process","config","require","global","expireTime","secrets","JWT_SECRET","mongo","redis","postgres","rethinkdb","envConfig","console","log","path","resolve","cwd","logs","app","logDirectory","join","__dirname","result","fs","existsSync","mkdirSync","logFileName","logStream","rfs","interval","use","morgan","skip","req","res","statusCode","stream","redisClient","createClient","REDIS_SERVER_PORT","REDIS_HOST","redisConnect","reject","on","err","message","exit","sequelize","Sequelize","POSTGRES_DB","POSTGRES_USER","POSTGRES_PASSWORD","host","POSTGRES_DB_HOST","dialect","POSTGRES_DB_DIALECT","pool","max","min","idle","operatorsAliases","sequelizeConnect","authenticate","then","catch","error","mongoUrl","MONGO_HOST","MONGO_INITDB_DATABASE","mongooseConnect","mongoose","connect","autoReconnect","useNewUrlParser","useCreateIndex","mongodb","connection","mongoConnect","once","Error","resolveAll","promisify","Sentry","LogRocket","init","configureScope","scope","addEventProcessor","event","hint","extra","sessionURL","root","gql","resolvers","merge","Query","dummy","obj","args","context","info","UserMutations","CompanyMutations","OrganizationMutation","JobMutation","UserQuery","EmailResolvers","typeDefs","UserGraphqlSchema","ApplyJobGraphqlSchema","JobsGraphqlSchema","CompanyGraphqlSchema","OrganizationGraphqlSchema","PaymentGraphqlShema","EmailGraphqlSchema","logExecutions","createGraphQLLogger","prefix","getAsync","get","bind","GraphQLServer","ApolloServer","formatError","captureException","code","extensions","locations","user","playground","settings","introspection","tracing","cacheControl","engine","port","API_SERVER_PORT","numCPUs","os","cpus","length","cluster","isMaster","pid","i","fork","worker","signal","server","http","createServer","currentApp","GraphQLEngine","listen","httpServer","logging","level","graphqlPath","module","hot","accept","removeListener","corsOption","origin","methods","credentials","exposedHeaders","corsConfig","cors","hosts","API_URL","hostValidation","ignoreFavicon","next","originalUrl","split","pop","sendStatus","ignoreRobots","url","type","send","ignoreRequest","dsn","maxBreadcrumbs","debug","environment","Handlers","requestHandler","bodyParser","urlencoded","extended","json","set","toobusy","security","compression","verify","errorHandler","name","headers","authorization","token","payload","verifyJwtToken","undefined","disable","hpp","helmet","frameguard","action","xssFilter","ieNoOpen","noSniff","isDevelopment","Schema","companySchema","created_by","Types","ObjectId","ref","String","unique","required","desc","lowercase","logo","location","default","reviews","rev_id","timings","fulltime","value","Number","units","per","parttime","internship","company_since","Date","last_seen","hiring_status","Boolean","languages","no_of_employees","opensource","open_source_id","Company","model","createCompany","_","input","username","AuthenticationError","account_type","ApolloError","findOne","oldCompany","User","findById","id","loggedInUser","company","save","newCompany","ownedCompany","push","comp_id","Mutation","sgMail","setApiKey","SENDGRID_API_KEY","sendMail","msg","to","email","from","subject","text","mailData","jobSchema","skills_required","sallary_min","currency","sallary_max","attachment","file","resume","user_id","current_status","views","applyJob","organization","profile","Jobs","jobCreate","currentUser","job","checkJob","jobs","find","savedJob","job_id","status","createOrganisation","Organization","newOrganization","ownedOrganization","org_id","OrganizationSchema","address","phoneno","org_type","organization_since","timestamps","createdAt","updatedAt","pre","populate","userSchema","password","phone","profile_picture","verified","social_urls","facebook","google","twitter","github","instagram","personal","notification","job_posting","company_promotion","comment","mail","account","subscription_type","companyWorking","apply_job_id","statics","sendUser","hashPassword","salt","Buffer","HASH_SECRET","key","crypto","pbkdf2Sync","toString","verifyPassword","signup","$or","oldUser","generateUser","newUser","login","generateResult","generateJwtToken","passwordToken","generateToken","print","confirmToken","isKey","data","del","newToken","resetPassword","againPassword","changeUsername","returnUser","sameUserReturn","checkEmail","checkUser","__","ruser","getUser","getAllUser","users","getMe","rootUser","ObjectCheck","lists","keys","forEach","includes","list","privateCert","readFileSync","cert","jwt","sign","algorithm","expiresIn","publicCert","e","size","buf","randomBytes","ApolloEngine","express","middlewares","applyMiddleware","apiKey","APOLLO_ENGINE_KEY"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAA6B;AAC7B,qCAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAqB,gBAAgB;AACrC;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,6BAAqB,gBAAgB;AACrC;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAAkB,8BAA8B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA,eAAO;AACP;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAgB,KAAK;AACrB;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA,wBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,gBAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,kBAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,eAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA,gBAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAe;AACf;AACA;AACA;AACA;;AAEA;AAC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M2I,gBAAgB,IAAIwP,YAAJ,CAAiB;AACtCI,SAAQrZ,QAAQD,GAAR,CAAYuZ;AADkB,CAAjB,CAAtB;;AAIA;AAIepY,kEAAf,E;;;;;;;;;;;;;;;;;;;;;;;;ACnCA,2C;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,8D;;;;;;;;;;;ACAA,0D;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,wE;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,iD;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,iC","file":"server.js","sourcesContent":[" \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar chunk = require(\"./\" + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\");\n \t\thotAddUpdateChunk(chunk.id, chunk.modules);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest() {\n \t\ttry {\n \t\t\tvar update = require(\"./\" + \"\" + hotCurrentHash + \".hot-update.json\");\n \t\t} catch (e) {\n \t\t\treturn Promise.resolve();\n \t\t}\n \t\treturn Promise.resolve(update);\n \t}\n\n \t//eslint-disable-next-line no-unused-vars\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"c35218de8e124a62f892\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = \"main\";\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(__webpack_require__.s = 0);\n","// import config and make it available globally\nconst configConfig = () => {\n  const env = process.env.NODE_ENV\n  let config\n  // import configuration from config\n\tswitch(env) {\n\t\tcase 'development':\n      config = require('../../config/config/configFiles/config.dev')\n      global.config = config\n\t\tcase 'testing':\n      config = require('../../config/config/configFiles/config.test')\n      global.config = config\n\t\tcase 'production':\n      config = require('../../config/config/configFiles/config.prod')\n      global.config = config\n\t\tdefault:\n      config = require('../../config/config/configFiles/config.dev')\n      global.config = config\n\t}\n}\n\nexport default configConfig\n","const config = {\n\texpireTime: '30d',\n  secrets: {\n    JWT_SECRET: 'yeezy350boost@12#'\n  },\n\tmongo: {\n\n\t},\n\tredis: {\n\n\t},\n\tpostgres: {\n\n\t},\n\trethinkdb: {\n\n\t}\n}\n\nexport default config\n","const config = {\n\tmongo: {\n\n\t},\n\tredis: {\n\n\t},\n\tpostgres: {\n\n\t},\n\trethinkdb: {\n\n\t}\n}\n\nexport default config\n","const config = {\n\texpireTime: '30d',\n  secrets: {\n    JWT_SECRET: 'yeezy350boost@12#'\n  },\n\tmongo: {\n\n\t},\n\tredis: {\n\n\t},\n\tpostgres: {\n\n\t},\n\tredis: {\n\n\t}\n}\n\nexport default config\n","import path from 'path'\nimport fs from 'fs'\nimport dotenv from 'dotenv'\n\nconst envConfig = async () => {\n\tconst env = process.env.NODE_ENV\n\t// let envConfig\n\tswitch(env) {\n\t\tcase 'development':\n\t\tcase 'dev':\n\t\t\tconsole.log(\"running on development environment\")\n\t\t\treturn await require('dotenv').config({ path: path.resolve(process.cwd(), 'config/env/.env.dev')})\n\t\t\t// envConfig = dotenv.parse(fs.readFileSync(path.resolve(process.cwd(), 'config/env/.env.dev')))\n\t\t\tbreak\n\t\tcase 'testing':\n\t\tcase 'test':\n\t\t\tconsole.log(\"running on test environment\")\n\t\t\treturn await require('dotenv').config({ path: path.resolve(process.cwd(), 'config/env/.env.test')})\n\t\t\t// envConfig = dotenv.parse(fs.readFileSync(path.resolve(process.cwd(), 'config/env/.env.test')))\n\t\t\tbreak\n\t\tcase 'production':\n\t\tcase 'prod':\n\t\t\tconsole.log(\"running on production environment\")\n\t\t\treturn await require('dotenv').config({ path: path.resolve(process.cwd(), 'config/env/.env.prod')})\n\t\t\t// envConfig = dotenv.parse(fs.readFileSync(path.resolve(process.cwd(), 'config/env/.env.prod')))\n\t\t\tbreak\n\t\tdefault:\n\t\t\treturn await require('dotenv').config({ path: path.resolve(process.cwd(), 'config/env/.env.dev')})\n\t\t\t// envConfig = dotenv.parse(fs.readFileSync(path.resolve(process.cwd(), 'config/env/.env.dev')))\n\t\t\tbreak\n\t}\n\t// for (var k in envConfig) {\n\t//   process.env[k] = envConfig[k]\n\t// }\n}\nenvConfig()\n\nexport default envConfig\n","// Import configuration file and make it available according to the environment\nimport configConfig from './config/configConfig'\nimport logs from './logs/logs'\n\nexport default app => {\n\t/*\n\t\tconfiguration for application (not every)\n\t*/\n\tconfigConfig()\n\tlogs(app)\n}\n","import fs from 'fs'\nimport path from 'path'\nimport morgan from 'morgan'\nimport rfs from 'rotating-file-stream'\n\nconst logDirectory = path.join(__dirname, 'log')\n\n// Make sure folder exists or create one folder\nconst result = fs.existsSync(logDirectory) || fs.mkdirSync(logDirectory)\n// filename according to environment\nconst logFileName = process.env.NODE_ENV === 'production'\n                    ? 'logs.log'\n                    : (process.env.NODE_ENV === 'development' ? 'dev.log' : 'test.log')\n\n// Creating rotating log files which change after 1 day\nconst logStream = rfs((logFileName || 'dev.log'), {\n  interval: '1d', // rotate per day\n  path: logDirectory\n})\n\nconst logs = app => {\n\tconst env = process.env.NODE_ENV\n\tswitch(env) {\n\t\tcase 'development':\n\t\t\tapp.use(morgan('dev', {\n        skip: function (req, res) { return res.statusCode < 400 }\n      }))\n\t\t\tapp.use(morgan('short', {\n        stream: logStream\n      }))\n\t\t\tbreak\n\t\tcase 'production':\n      app.use(morgan('combined', { stream: logStream}))\n      break\n    case 'testing':\n      app.use(morgan('common', { stream: logStream}))\n      break\n    default:\n      app.use(morgan('dev', {\n        skip: function (req, res) { return res.statusCode < 400 }\n      }))\n      app.use(morgan('common', {\n        skip: function (req, res) { return res.statusCode < 400 },\n        stream: logStream\n      }))\n      break\n\t}\n}\n\nexport default logs\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(updatedModules, renewedModules) {\n\tvar unacceptedModules = updatedModules.filter(function(moduleId) {\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\n\t});\n\tvar log = require(\"./log\");\n\n\tif (unacceptedModules.length > 0) {\n\t\tlog(\n\t\t\t\"warning\",\n\t\t\t\"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\"\n\t\t);\n\t\tunacceptedModules.forEach(function(moduleId) {\n\t\t\tlog(\"warning\", \"[HMR]  - \" + moduleId);\n\t\t});\n\t}\n\n\tif (!renewedModules || renewedModules.length === 0) {\n\t\tlog(\"info\", \"[HMR] Nothing hot updated.\");\n\t} else {\n\t\tlog(\"info\", \"[HMR] Updated modules:\");\n\t\trenewedModules.forEach(function(moduleId) {\n\t\t\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n\t\t\t\tvar parts = moduleId.split(\"!\");\n\t\t\t\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t\tlog.groupEnd(\"info\");\n\t\t\t} else {\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t}\n\t\t});\n\t\tvar numberIds = renewedModules.every(function(moduleId) {\n\t\t\treturn typeof moduleId === \"number\";\n\t\t});\n\t\tif (numberIds)\n\t\t\tlog(\n\t\t\t\t\"info\",\n\t\t\t\t\"[HMR] Consider using the NamedModulesPlugin for module names.\"\n\t\t\t);\n\t}\n};\n","var logLevel = \"info\";\n\nfunction dummy() {}\n\nfunction shouldLog(level) {\n\tvar shouldLog =\n\t\t(logLevel === \"info\" && level === \"info\") ||\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n\treturn shouldLog;\n}\n\nfunction logGroup(logFn) {\n\treturn function(level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\nmodule.exports = function(level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function(level) {\n\tlogLevel = level;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals __resourceQuery */\nif (module.hot) {\n\tvar hotPollInterval = +__resourceQuery.substr(1) || 10 * 60 * 1000;\n\tvar log = require(\"./log\");\n\n\tvar checkForUpdate = function checkForUpdate(fromUpdate) {\n\t\tif (module.hot.status() === \"idle\") {\n\t\t\tmodule.hot\n\t\t\t\t.check(true)\n\t\t\t\t.then(function(updatedModules) {\n\t\t\t\t\tif (!updatedModules) {\n\t\t\t\t\t\tif (fromUpdate) log(\"info\", \"[HMR] Update applied.\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\t\t\t\t\tcheckForUpdate(true);\n\t\t\t\t})\n\t\t\t\t.catch(function(err) {\n\t\t\t\t\tvar status = module.hot.status();\n\t\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] Cannot apply update.\");\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] \" + (err.stack || err.message));\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] You need to restart the application!\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\t\"[HMR] Update failed: \" + (err.stack || err.message)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t};\n\tsetInterval(checkForUpdate, hotPollInterval);\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n","import Sequelize from 'sequelize'\nimport redis from 'redis'\nimport mongoose from 'mongoose'\n\n/*\n\t@redis connection\n\tcreate a redis client and connection is established\n*/\nconst redisClient = redis.createClient(`${process.env.REDIS_SERVER_PORT}`, `${process.env.REDIS_HOST}`)\nconst redisConnect = new Promise((resolve, reject) => {\n\tredisClient.on('error', err => {\n\t\t// redis error\n\t\tconsole.log(`Error occured ${err.message()}`)\n\t\treject(err.message())\n\t\tprocess.exit()\n\t})\n\tredisClient.on('connect', () => {\n\t\tconsole.log(`🚀 Connected to redis redis:6379`)\n\t\tresolve(redisClient)\n\t})\n})\n\n/*\n\t@postgress connection\n\tpostgress connected with sequelize package\n*/\n// console.log(process.env);\nconst sequelize = new Sequelize(`${process.env.POSTGRES_DB}`, `${process.env.POSTGRES_USER}`, `${process.env.POSTGRES_PASSWORD}`, {\n\thost: `${process.env.POSTGRES_DB_HOST}`,\n\tdialect: `${process.env.POSTGRES_DB_DIALECT}`,\n\tpool: {\n\t\tmax: 5,\n\t\tmin: 0,\n\t\tidle: 10000\n\t},\n\toperatorsAliases: false\n})\n\nconst sequelizeConnect = new Promise((resolve, reject) => {\n\tsequelize\n\t\t.authenticate()\n\t\t.then(() => {\n\t\t\tconsole.log(`🚀 Connected to ${process.env.POSTGRES_DB} postgress database successfully!!`)\n\t\t\tresolve(sequelize)\n\t\t})\n\t\t.catch(err => {\n\t\t\t// postgress connection error\n\t\t\tconsole.error(`Unable to connect to the database: ${err}`)\n\t\t\treject(err)\n\t\t})\n})\n\n/*\n\t@mongodb connection\n\tDatabase connection for nosql database\n*/\nconst mongoUrl = `${process.env.MONGO_HOST}/${process.env.MONGO_INITDB_DATABASE}`\nconst mongooseConnect = mongoose.connect(mongoUrl, { autoReconnect: true, useNewUrlParser: true, useCreateIndex: true })\nconst mongodb = mongoose.connection\nconst mongoConnect = new Promise((resolve, reject) => {\n\tmongodb.once('open', () => {\n\t\tconsole.log(`🚀 Connected to ${mongoUrl} nosql mongo database`)\n\t\tresolve(mongodb)\n\t})\n\tmongodb.on('error', () => {\n\t\tconsole.error(`error  connection to mongodb database`)\n\t\treject(new Error(\"Error connection to mongodb\"))\n\t})\n})\n\nconst resolveAll = async () => {\n\tawait mongoConnect\n\tawait sequelizeConnect\n\tawait redisConnect\n}\n\nexport {\n\tmongodb,\n\tsequelize,\n\tredisClient,\n\tmongooseConnect,\n\tresolveAll\n}\n","const {promisify} = require('util')\nconst Sentry = require('@sentry/node')\nimport LogRocket from 'logrocket'\nimport { ApolloServer, gql, makeExecutableSchema } from 'apollo-server-express'\nimport createGraphQLLogger from 'graphql-log'\nimport { merge } from 'lodash'\nimport { mongodb, redisClient, sequelize } from './db'\n\n/*\nLogRocket entry configuration ...\n */\nLogRocket.init('oojob/server')\nSentry.configureScope(scope => {\n  scope.addEventProcessor(async (event, hint) => {\n    event.extra.sessionURL = LogRocket.sessionURL\n    return event\n  })\n})\n\n/*\n\timport graphql schema\n*/\nimport { UserGraphqlSchema } from './resources/user/user.graphql'\nimport { ApplyJobGraphqlSchema } from './resources/applyJob/applyJob.graphql'\nimport { JobsGraphqlSchema } from './resources/jobs/jobs.graphql'\nimport { CompanyGraphqlSchema } from './resources/company/company.graphql'\nimport { OrganizationGraphqlSchema } from './resources/organization/organization.graphql'\nimport { PaymentGraphqlShema } from './resources/payment/payment.graphql'\nimport { EmailGraphqlSchema } from './resources/email/email.graphql'\n\n/*\n\timport graphql resolvers\n*/\nimport { EmailResolvers } from './resources/email/email.resolver'\n\n/*\n\timport mutations\n */\nimport { UserMutations } from \"./resources/user/user.resolver.mutations\";\nimport { CompanyMutations } from './resources/company/company.resolver.mutations'\nimport { OrganizationMutation } from './resources/organization/organisation.resolver.mutations'\nimport { JobMutation } from './resources/jobs/jobs.resolver.mutations'\n\n/*\n import Query functions\n */\nimport { UserQuery } from \"./resources/user/user.resolver.query\";\n\nconst root  = gql`\n\ttype Query {\n\t\tdummy: String\n\t}\n\ttype Mutation {\n\t\tdummy: String\n\t}\n\ttype Subscription {\n\t\tdummy: String\n\t}\n\tschema {\n\t\tquery: Query\n\t\tmutation: Mutation\n\t\tsubscription: Subscription\n\t}\n`\n\nconst resolvers = merge(\n\t{\n\t\tQuery: {\n\t\t\tdummy: (obj, args, context, info) => {\n\t\t\t\treturn `Hello World`\n\t\t\t}\n\t\t}\n\t},\n\t// All queries and mutations goes here\n\tUserMutations,\n\tCompanyMutations,\n\tOrganizationMutation,\n\tJobMutation,\n\tUserQuery,\n\tEmailResolvers\n)\n\nconst typeDefs = [\n\troot,\n\tUserGraphqlSchema,\n\tApplyJobGraphqlSchema,\n\tJobsGraphqlSchema,\n\tCompanyGraphqlSchema,\n\tOrganizationGraphqlSchema,\n\tPaymentGraphqlShema,\n\tEmailGraphqlSchema\n]\n\n/* create a graphql logger */\nif(process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'dev') {\n\tconst logExecutions = createGraphQLLogger({\n\t\tprefix: 'resolvers : '\n\t})\n\tlogExecutions(resolvers)\n}\n\nconst getAsync = promisify(redisClient.get).bind(redisClient)\nexport const GraphQLServer = new ApolloServer({\n\ttypeDefs,\n\tresolvers,\n\tformatError: err => {\n\t\tSentry.captureException(err)\n    return {\n      message: err.message,\n      code: err.extensions && err.extensions.code,   // <--\n      locations: err.locations,\n      path: err.path ? err.path : \"path not defined\"\n    }\n  },\n\tcontext: ({ req, res }) => {\n\t\treturn {\n\t\t\treq, mongodb, redisClient, sequelize, getAsync, user: req.user\n\t\t}\n\t},\n\tplayground: {\n\t\tsettings: {\n\t    'editor.theme': 'light',\n\t  }\n\t},\n\t// enable playground and introspection in production\n\tintrospection: true,\n\ttracing: true,\n\tcacheControl: true,\n\tengine: false\n})\n","import env from '../config/env/env' /* environment variable setup */\nimport http from 'http'\nimport cluster from 'cluster'\nimport os from 'os'\nimport app, { GraphQLEngine, GraphQLServer} from './server' /* create server */\nexport const port = process.env.API_SERVER_PORT || 8080 /* dynamically port configuration */\nconst numCPUs = os.cpus().length\n\nif(cluster.isMaster) {\n\tconsole.log(`Master ${process.pid} is running`)\n\n\t// Fork workers.\n  for (let i = 0; i < numCPUs; i++) {\n    cluster.fork()\n  }\n\n\tcluster.on('exit', (worker, code, signal) => {\n    console.log(`worker ${worker.process.pid} died`);\n  })\n} else {\n\tconst server = http.createServer(app)\n\tlet currentApp = app\n\tGraphQLEngine.listen({\n\t\tport: port,\n\t\thttpServer: server,\n\t\tlogging: {\n\t\t\tlevel: \"ERROR\" // Engine Proxy logging level. DEBUG, INFO (default), WARN or ERROR.\n\t\t}\n\t})\n\tconsole.log(`Worker ${process.pid} started`)\n\tconsole.log(`🚀 All Database connected successfully`)\n\tconsole.log(`🚀 Server ready at http://localhost:${port}${GraphQLServer.graphqlPath}`)\n\n\tif(module.hot) {\n\t\tmodule.hot.accept('./server', () => {\n\t\t\tserver.removeListener('request', currentApp)\n\t\t\tserver.on('request', app)\n\t\t\tcurrentApp = app\n\t\t})\n\t}\n}\n","import cors from 'cors'\n\nlet corsOption = {\n\torigin: true,\n\tmethods: 'GET, HEAD, PUT, PATCH, POST, DELETE, OPTION',\n\tcredentials: true,\n\texposedHeaders: ['x-auth-token']\n}\n\nconst corsConfig = app => {\n\tapp.use(cors(corsOption))\n}\n\nexport default corsConfig\n","import hostValidation from 'host-validation'\n\nexport default app => {\n\t// allowed hosts\n\tconst hosts = [\n\t\t'http://localhost:8080/graphql',\n\t\tprocess.env.API_URL,\n\t\t/^(https?:\\/\\/)\\w(:?[0-9]?)*/,\n\t\t/^(https?:\\/\\/)\\w(:?[0-9]?)?\\.\\w/\n\t]\n\n\t// allowed referer\n\t// Express.js middleware that protects Node.js servers from DNS\n\t// Rebinding attacks by validating Host and Referer [sic] headers from incoming requests.\n\tapp.use(hostValidation({\n\t\thosts\n\t}))\n}\n","const ignoreFavicon = (req, res, next) => {\n\tif (req.originalUrl && req.originalUrl.split(\"/\").pop() === 'favicon.ico') {\n    return res.sendStatus(204)\n  } else {\n\t\treturn next()\n\t}\n}\n\nconst ignoreRobots = (req, res, next) => {\n\tif(req.url === '/robots.txt') {\n\t\tres.type('text/plain')\n\t\tres.send('User-agent: *\\nDisallow: /')\n\t} else {\n\t\treturn next()\n\t}\n}\n\nconst ignoreRequest = app => {\n\tapp.use(ignoreFavicon)\n\tapp.use(ignoreRobots)\n}\n\nexport default ignoreRequest\n","const Sentry = require('@sentry/node')\nimport compression from 'compression'\nimport bodyParser from 'body-parser'\nimport { GraphQLError } from 'graphql'\nimport { AuthenticationError, ApolloError, ForbiddenError } from 'apollo-server-express'\n\n/*\nSentry configuration for error tracking ...\n */\nSentry.init({\n  dsn: 'https://1730b0d8433a4912a2a01807f48cf908@sentry.io/1278141',\n\tmaxBreadcrumbs: 50,\n  debug: true,\n\tenvironment: 'staging'\n})\n\n/*\n\tmiddleware\n*/\nimport toobusy from './toobussy'\nimport security from './security'\nimport ignoreRequest from './ignReq'\nimport cors from './cors'\nimport hosts from './hosts'\nimport { verify } from './jwt'\n\nexport default app => {\n\tapp.use(Sentry.Handlers.requestHandler()) // The request handler must be the first middleware on the app\n\tapp.use(bodyParser.urlencoded({ extended: false })) // parse application/x-www-form-urlencoded\n\tapp.use(bodyParser.json()) // parse application/json\n\tapp.set('trust proxy', true) // run it also behind proxy\n\tapp.use(toobusy)\n\tsecurity(app)\n\tignoreRequest(app)\n\tcors(app)\n\tapp.use(compression())\n\tapp.use('/graphql', verify)\n\tapp.use(Sentry.Handlers.errorHandler()) // The error handler must be before any other error middleware\n\tapp.use(function (err, req, res, next) {\n\t  if (err.name === 'UnauthorizedError') {\n\t\t\tconsole.log(\"auth error\")\n\t\t\tSentry.captureException(err)\n\t\t\tnext()\n\t  }\n\t\tnext()\n\t})\n\t// hosts(app)\n}\n","import { verifyJwtToken } from '../resources/utils/jwt.auth'\n\nexport const verify = (req, res, next) => {\n\tif(req.headers.authorization && req.headers.authorization.split(\" \")[0] === \"Bearer\") {\n\t\tconsole.log(req.headers.authorization.split(\" \")[1])\n\t\tconst token = req.headers.authorization.split(\" \")[1]\n\t\tconst payload = verifyJwtToken(token)\n\t\tif(payload !== null || payload !== undefined) {\n\t\t\treq.user = payload\n\t\t}\n  } else {\n\t\treq.user = {}\n\t}\n\tnext()\n}\n","import helmet from 'helmet'\nimport hpp from 'hpp'\n\nexport default app => {\n\t// Don't expose any software information to hackers.\n  app.disable('x-powered-by')\n\n\t// Express middleware to protect against HTTP Parameter Pollution attacks\n\tapp.use(hpp())\n\n\t// The X-Frame-Options header tells browsers to prevent your webpage from being put in an iframe.\n\tapp.use(helmet.frameguard({ action: 'sameorigin' }))\n\n\t// Cross-site scripting, abbreviated to “XSS”, is a way attackers can take over webpages.\n\tapp.use(helmet.xssFilter())\n\n\t// Sets the X-Download-Options to prevent Internet Explorer from executing\n  // downloads in your site’s context.\n  // @see https://helmetjs.github.io/docs/ienoopen/\n  app.use(helmet.ieNoOpen())\n\n\t// Don’t Sniff Mimetype middleware, noSniff, helps prevent browsers from trying\n  // to guess (“sniff”) the MIME type, which can have security implications. It\n  // does this by setting the X-Content-Type-Options header to nosniff.\n  // @see https://helmetjs.github.io/docs/dont-sniff-mimetype/\n  app.use(helmet.noSniff())\n}\n","import toobusy from 'toobusy-js'\n\nconst isDevelopment = process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'dev'\n\nexport default (req, res, next) => {\n\tif(!isDevelopment && toobusy()) {\n\t\t// only show status in production and not in development\n\t\tres.statusCode = 503\n\t\tres.send(\"It looke like ooJob is bussy. Wait few seconds...\")\n\t} else {\n\t\t// queue up the request and wait for it to complete in testing and development phase\n\t\tnext()\n\t}\n}\n","export const ApplyJobGraphqlSchema = `\n\ttype UsersInApplyJob {\n\t\tuser_id: String!\n\t\tresume: Resume!\n\t\tproposal: String!\n\t\tapplied_on: String!\n\t}\n\ttype ApplyJob {\n\t\tjob_id: String!\n\t\tlikes: Int\n\t\tdislikes: Int\n\t\tusers: [UsersInApplyJob!]\n\t\tvacancy: Int\n\t\tnotification_on_job_apply: Int\n\t}\n\n\textend type Query {\n\t\tfetchApplyJob: ApplyJob\n\t}\n`\n","export const CompanyGraphqlSchema = `\n  type Review {\n    user_id: String!\n    stars: Int!\n    pros: [String]\n    cons: [String]\n    suggestions: String\n  }\n\tenum TimingsUnits {\n\t\tDD\n\t\tWW\n\t\tMM\n\t\tYY\n\t}\n\ttype TimingsInput {\n\t\tvalue: Int!\n\t\tunits: String!\n\t\tper: TimingsUnits!\n\t}\n  type Timings {\n    fulltime: TimingsInput\n    parttime: TimingsInput\n    internship: TimingsInput\n  }\n  type OpenSource {\n    title: String!\n    description: String!\n    url: String!\n    languages: [String!]\n    licence_type: String!\n  }\n  type Company {\n    id: ID!\n    name: String!\n    desc: String!\n    url: String\n    logo: String\n    location: String\n    reviews: [Review!]\n    timings: Timings\n    compnay_since: String\n    hiring_status: Boolean\n    languages: [String!]\n    no_of_employees: Int\n    opensource: [OpenSource]\n  }\n\tinput CompanyDetails {\n\t\tcreated_by: ID\n\t\tname: String!\n    desc: String!\n    url: String\n    logo: String\n    location: String\n    compnay_since: String\n    hiring_status: Boolean\n    languages: [String!]\n    no_of_employees: Int\n\t}\n  extend type Query {\n    fetchCompany: Company\n  }\n\textend type Mutation {\n\t\tcreateCompany(input: CompanyDetails!): Company\n\t}\n`\n","import mongoose from 'mongoose'\nimport { mongodb } from '../../db'\nconst Schema = mongoose.Schema\n\nconst companySchema = new Schema({\n\tcreated_by: {\n\t\ttype: Schema.Types.ObjectId, ref: 'User'\n\t},\n  name: { type: String, unique: true, required: true },\n  desc: { type: String, required: true },\n\turl: { type: String, unique: true, lowercase: true },\n\tlogo: { type: String },\n\tlocation: { type: String, default: null },\n\treviews: [{\n\t\trev_id: { type: Schema.Types.ObjectId, ref: 'Reviews' }\n\t}],\n\ttimings: {\n\t\tfulltime: { value: { type: Number, default: 8 }, units: { type: String, default: 'HRS' }, per: { type: String, default: 'DD'} },\n\t\tparttime: { value: { type: Number, default: 2 }, units: { type: String, default: 'HRS' }, per: { type: String, default: 'DD'} },\n\t\tinternship: { value: { type: Number, default: 4 }, units: { type: String, default: 'HRS' }, per: { type: String, default: 'DD'} }\n\t},\n\tcompany_since: { type: Date },\n\tlast_seen: { type: Date },\n\thiring_status: {type: Boolean, default: false },\n\tlanguages: [{ type: String }],\n\tno_of_employees: { min: { type: Number, default: null }, max: { type: Number, default: null } },\n\topensource: [{\n\t\topen_source_id: { type: Schema.Types.ObjectId, ref: 'OpenSource'}\n\t}]\n})\n\nexport const Company = mongodb.model('Company', companySchema)\n","import  { AuthenticationError, UserInputError, ApolloError } from 'apollo-server-express'\nimport { Company } from './company.model'\nimport { User } from '../user/user.model'\n\n/**\n * @params { companyname }\n * @return { Company }\n * Mutation to create one company\n */\nconst createCompany = async (_, {input}, { user, mongodb }) => {\n\tif(!user || !user.username || user === undefined) {\n\t\tthrow new AuthenticationError('must authenticate')\n\t}\n\t// check that the account type should be creator\n\tif(!user.account_type === 'provider') {\n\t\tthrow new ApolloError('Your account must have provider credential rather than seeker', 3)\n\t}\n\tconst oldCompany = await Company.findOne({ name: input.name })\n\tif(oldCompany) {\n\t\tthrow new ApolloError(\"Company already exists\", 2)\n\t}\n\tconst loggedInUser = await User.findById(user.id)\n\t// now create the new company\n\tconst company = new Company(input)\n\tcompany.created_by = user.id\n\tconst newCompany = await company.save()\n\tloggedInUser.ownedCompany.push({\n\t\tcomp_id: newCompany.id\n\t})\n\tawait loggedInUser.save()\n\treturn newCompany\n}\n\nexport const CompanyMutations = {\n\tMutation: {\n\t\tcreateCompany\n\t}\n}\n","export const EmailGraphqlSchema = `\n\ttype Email {\n\t\tid: ID!\n\t\tto: String!\n\t\tfrom: String!\n\t\tsubject: String!\n\t\ttext: String!\n\t}\n\tinput ClientEmail {\n\t\tto: String!\n\t\tfrom: String!\n\t\tsubject: String!\n\t\ttext: String!\n\t}\n\tinput emailCred {\n\t\tusername: String!\n\t\temail: ClientEmail\n\t}\n\textend type Query {\n\t\tallEmails: [Email]!\n\t\tuserEmails: [Email]!\n\t\tsingleEmail: Email!\n\t}\n\textend type Mutation {\n\t\tsendMail(input: emailCred): Boolean!\n\t}\n`\n","import sgMail from '@sendgrid/mail'\nsgMail.setApiKey(process.env.SENDGRID_API_KEY)\n\nconst sendMail = async (_, { input }, { user }) => {\n\tif(!user) {\n\t\tthrow new Error(\"You must be logged in\")\n\t}\n\tconst msg = {\n\t\tto: input.email.to,\n\t\tfrom: input.email.from,\n\t\tsubject: input.email.subject,\n\t\ttext: input.email.text\n\t}\n\tconst mailData = await sgMail.send(msg)\n\tif(!mailData) {\n\t\tthrow new Error(\"Error sending email\")\n\t}\n\treturn true\n}\n\nexport const EmailResolvers = {\n\tMutation: {\n\t\tsendMail\n\t}\n}\n","export const JobsGraphqlSchema = `\n  enum CurrentStatus {\n    active\n    hold\n    expired\n    closed\n    urgent\n  }\n  type Resume {\n    path: String!\n    user_id: String!\n  }\n  type Job {\n    id: String!\n    name: String!\n    type: String!\n    category: [String!]\n    desc: String!\n    skills_required: [String!]\n    sallary_min: Float!\n    sallary_max: Float!\n    location: String\n    attachment: String\n    resume: Resume\n    current_status: CurrentStatus!\n    views: Int\n\t\tcreated_by: String\n\t\tcompany: String\n\t\torganization: String\n\t\tprofile: String\n    applyJob: [ApplyJob!]\n  }\n  extend type Query {\n    fetchJob: Job\n  }\n\tinput createJobInput {\n\t\tname: String!\n\t\ttype: String!\n\t\tdesc: String!\n\t\tskills_required: [String]\n\t\tsallary_min: Float!\n\t\tsallary_max: Float!\n\t\tlocation: String\n\t\tprofile: String\n\t\tcompany: String\n\t}\n\textend type Mutation {\n\t\tjobCreate(input: createJobInput!): Job!\n\t}\n`\n","import mongoose from 'mongoose'\nimport { mongodb } from '../../db'\nconst Schema = mongoose.Schema\n\nconst jobSchema = new Schema({\n\tname: { type: String, required: true },\n\ttype: { type: String, required: true },\n\tdesc: { type: String, required: true },\n\tskills_required: [ { type: String } ],\n\tsallary_min: { value: { type: Number }, currency: { type: String } },\n\tsallary_max: { value: { type: Number }, currency: { type: String } },\n\tlocation: { type: String },\n\tattachment: [{ \"type\": { type: String },file: { type: String } }],\n\tresume: { path: { type: String }, user_id: { type: Schema.Types.ObjectId, ref: 'User'} },\n\tcurrent_status: { type: String, lowercase: true },\n\tviews: { type: Number, default: 0 },\n\tapplyJob: [{\n\t\ttype: Schema.Types.ObjectId,\n\t\tref: 'ApplyJob'\n\t}],\n\tcreated_by: { type: Schema.Types.ObjectId, ref: 'User' },\n\tcompany: { type: Schema.Types.ObjectId, ref: 'Company' },\n\torganization: { type: Schema.Types.ObjectId, ref: 'Organization' },\n\tprofile: { type: String, default: 'company' }\n})\n\nexport const Jobs = mongodb.model('Jobs', jobSchema)\n\n\n/*\n\tmilestone: [\n\t\t{\n\t\t\tkey: {\n\t\t\t\ttype: Number\n\t\t\t},\n\t\t\tvalue: {\n\t\t\t\ttype: String\n\t\t\t}\n\t\t}\n\t],\n*/\n","import { AuthenticationError, ApolloError } from 'apollo-server-express'\nimport { JobsGraphqlSchema } from './jobs.graphql'\nimport { Jobs } from './jobs.model'\nimport { User } from '../user/user.model'\n\nexport const jobCreate = async (_, {input}, {mongodb, user}) => {\n\t// validate the job creation before creating job\n\t/*\n\t\tcheck weather the user is logged in or not\n\t*/\n\tif(!user.username) {\n\t\tthrow new AuthenticationError(\"must authenticate\")\n\t}\n\t// check that the account type should be creator\n\tif(user.account_type !== 'provider') {\n\t\tthrow new ApolloError('Your account must have provider credential rather than seeker', 3)\n\t}\n\t// check to find old jobs with this name\n\t// const oldJob = Jobs.findOne({ name: input.name })\n\t// if(oldJob) {\n\t// \tthrow new ApolloError(\"Job already exists\", 2)\n\t// }\n\t/*\n\t\tfetch the current user and get the organization from it\n\t*/\n\tconst currentUser = await User.findById(user.id)\n\tconst job = new Jobs({\n\t\tname: input.name,\n\t\ttype: input.type,\n\t\tdesc: input.desc,\n\t\tskills_required: input.skills_required ? input.skills_required : null,\n\t\tsallary_min: input.sallary_min ? input.sallary_min : null,\n\t\tsallary_max: input.sallary_max ? input.sallary_max : null,\n\t\tlocation: input.location ? input.location : null,\n\t\tcreated_by: user.id,\n\t\tprofile: input.profile,\n\t\t[input.profile]: currentUser.organization\n\t})\n\tconst checkJob = currentUser.jobs.find(job => {\n\t\tif(job.name === input.name) {\n\t\t\tthrow new ApolloError(\"Job already exists for this organization\", 2)\n\t\t}\n\t})\n\tconst savedJob = await job.save()\n\tcurrentUser.jobs.push({\n\t\tjob_id: savedJob.id,\n\t\tstatus: 'active'\n\t})\n\treturn savedJob\n}\n\nexport const JobMutation = {\n\tMutation: {\n\t\tjobCreate\n\t}\n}\n","import  { AuthenticationError, UserInputError, ApolloError } from 'apollo-server-express'\nimport { Organization } from './organization.model'\nimport { User } from '../user/user.model'\n\n\nconst createOrganisation = async (_, { input }, { user }) => {\n\tif(!user || !user.username || user === undefined) {\n\t\tthrow new AuthenticationError('must authenticate')\n\t}\n\t// check that the account type should be creator\n\tif(user.account_type !== 'provider') {\n\t\tthrow new ApolloError('Your account must have provider credential rather than seeker', 3)\n\t}\n\tconst oldCompany = await Organization.findOne({ name: input.name })\n\tif(oldCompany) {\n\t\tthrow new ApolloError(\"Organization already exists\", 2)\n\t}\n\tconst loggedInUser = await User.findById(user.id)\n\tconst organization = new Organization(input)\n\torganization.created_by = user.id\n\tconst newOrganization = await organization.save()\n\tloggedInUser.ownedOrganization.push({\n\t\torg_id: newOrganization.id\n\t})\n\tloggedInUser.organization = newOrganization.id\n\tawait loggedInUser.save()\n\treturn newOrganization\n}\n\nexport const OrganizationMutation = {\n\tMutation: {\n\t\tcreateOrganisation\n\t}\n}\n","export const OrganizationGraphqlSchema = `\n\ttype Organization {\n\t\tid: String!\n\t\tname: String!\n\t\tdesc: String!\n\t\turl: String\n\t\taddress: String\n\t\tphoneno: String\n\t\torg_type: [String!]\n\t\torganization_since: String\n\t\tno_of_member: Int\n\t\tlogo: String\n\t\tlanguages: [String!]\n\t\treviews: [Review]\n\t\tcreated_at: String!\n\t\tupdated_at: String!\n\t\thiring_status: Boolean\n\t\tno_of_employees: Int\n\t\topensource: [OpenSource]\n\t\tlocation: String\n\t\tcreated_by: User!\n\t}\n\tinput OrganizationDetails {\n\t\tcreated_by: ID\n\t\tname: String!\n    desc: String!\n    url: String\n    logo: String\n    location: String\n    organization_since: String\n    hiring_status: Boolean\n    languages: [String!]\n    no_of_employees: Int\n\t}\n  extend type Query {\n    fetchOrganization: Organization\n  }\n\textend type Mutation {\n\t\tcreateOrganisation(input: OrganizationDetails!): Organization\n\t}\n`\n","import mongoose from 'mongoose'\nimport { mongodb } from '../../db'\nconst Schema = mongoose.Schema\n\nconst OrganizationSchema = new Schema({\n\tcreated_by: {\n\t\ttype: Schema.Types.ObjectId, ref: 'User'\n\t},\n\tname: { type: String, unique: true, required: true },\n\tdesc: { type: String, required: true },\n\turl: { type: String, lowercase: true },\n\taddress: { type: String },\n\tphoneno: { type: String },\n\torg_type: [{ type: String }],\n\torganization_since: { type: Date },\n\tlast_seen: { type: Date },\n\tno_of_employees: { min: Number, max: Number },\n\tlogo: { type: String },\n\tlanguages: [{ type: String }],\n\tlocation: { type:String },\n\treviews: [{\n\t\trev_id: { type: Schema.Types.ObjectId, ref: 'Reviews' }\n\t}],\n\tno_of_employees: { min: { type: Number, default: null }, max: { type: Number, default: null } },\n\thiring_status: {type: Boolean, default: false },\n\topensource: [{\n\t\topen_source_id: { type: Schema.Types.ObjectId, ref: 'OpenSource'}\n\t}]\n}, { timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }})\n\nOrganizationSchema.pre('find', function() {\n\tthis.populate('created_by')\n})\n\nexport const Organization = mongodb.model('Organization', OrganizationSchema)\n","export const PaymentGraphqlShema = `\n  extend type Query {\n    fetchPayment: String\n  }\n`\n","export const UserGraphqlSchema = `\n\ttype SocialUrls {\n\t\tfacebook: String\n\t\tgoogle: String\n\t\ttwitter: String\n\t\tgithub: String\n\t\tinstagram: String\n\t\tpersonal: String\n\t}\n\ttype Status {\n\t\tstatus: Boolean!\n\t}\n\ttype Notification {\n\t\tjob_posting: Status!\n\t\tcompany_promotion: Status!\n\t\tmessage: Status!\n\t\tmail: Status!\n\t\tcomment: Status!\n\t}\n\tenum SubscriptionTypeEnum {\n\t\tfree\n\t\tstarter\n\t\tpremium\n\t}\n\tenum AccountTypeEnum {\n\t\tprovider\n\t\tseeker\n\t}\n\ttype Account {\n\t\taccount_type: AccountTypeEnum!\n\t\tsubscription_type: SubscriptionTypeEnum!\n\t}\n\ttype User {\n\t\tid: ID!\n\t\tusername: String!\n\t\temail: String!\n\t\tphone: String\n\t\taddress: String\n\t\tlocation: String\n\t\tprofile_picture: String\n\t\tverified: Boolean!\n\t\tcreated_at: String!\n\t\tupdated_at: String!\n\t\torganization: Organization\n\t\tsocial_urls: SocialUrls!\n\t\tnotification: Notification!\n\t\taccount: Account!\n\t}\n\ttype UserResult {\n\t\tstatus: Boolean!\n\t\tmessage: String!\n\t\tuser: User\n\t}\n\ttype Result {\n\t\tstatus: Boolean!\n\t\tmessage: String!\n\t}\n\ttype PasswordReset {\n\t\ttoken: String\n\t\tconfirm: Boolean\n\t}\n\textend type Query {\n\t\tcurrentUser: User\n\t\tgetMe: String\n\t\tcheckEmail(email: String!): Result!\n\t\tcheckUser(username: String!): Result!\n\t\tgetAllUser: [User]!\n\t\tgetUser(id: ID!): User\n\t\tnotification(id: ID!): Notification\n\t}\n\tinput AccountTypeInput {\n\t\taccount_type: AccountTypeEnum!\n\t\tsubscription_type: SubscriptionTypeEnum\n\t}\n\tinput UserSignupCredInput {\n\t\tusername: String!\n\t\temail: String!\n\t\tpassword: String!\n\t\taccount: AccountTypeInput!\n\t}\n\tinput UserLoginCredInput {\n\t\tusername: String\n\t\temail: String\n\t\tpassword: String!\n\t}\n\tinput UserCheckInput {\n\t\temail: String\n\t\tusername: String\n\t}\n\tinput TokenInput {\n\t\ttoken: String!\n\t\temail: String\n\t\tusername: String\n\t}\n\tinput ResetPasswordInput {\n\t\ttoken: String!\n\t\temail: String\n\t\tusername: String\n\t\tpassword: String!\n\t\tagainPassword: String!\n\t}\n\textend type Mutation {\n\t\tsignup(input: UserSignupCredInput!): UserResult!\n\t\tlogin(input: UserLoginCredInput!): Result!\n\t\tpasswordToken(input: UserCheckInput!): Result!\n\t\tconfirmToken(input: TokenInput!): Result!\n\t\tresetPassword(input: ResetPasswordInput!): Result!\n\t\tchangeUsername(input: UserCheckInput!): Result!\n\t}\n`\n","import crypto from 'crypto'\nimport mongoose from 'mongoose'\nimport { mongodb } from '../../db'\nconst Schema = mongoose.Schema\n\nconst userSchema = new Schema({\n  username: { type: String, unique: true, required: true },\n  email: { type: String, unique: true, required: true },\n  password: { required: true, type: String, required: true },\n\tphone: { type: String },\n\taddress: { type: String },\n\tlocation: { type: String },\n\tprofile_picture: { type: String },\n\tverified: { type: Boolean, default: false },\n\tsocial_urls: {\n    facebook: { type: String, default: null },\n\t\tgoogle: {\ttype: String, default: null },\n\t\ttwitter: { type: String, default: null\t},\n\t\tgithub: {\ttype: String, default: null },\n\t\tinstagram: { type: String, default: null\t},\n\t\tpersonal: {\ttype: String, default: null }\n  },\n\tnotification: {\n\t\tjob_posting: { status: { type: Boolean, default: true } },\n    company_promotion: { status: { type: Boolean, default: true } },\n    comment: { status: { type: Boolean, default: true } },\n\t\tmail: { status: { type: Boolean, default: true } },\n\t\tmessage: { status: { type: Boolean, default: true } }\n\t},\n\taccount: {\n\t\taccount_type: { type: String, lowercase: true },\n\t\tsubscription_type: { type: String, lowercase: true, default: 'free' },\n\t},\n\townedCompany: [{\n\t\tcomp_id: { type: Schema.Types.ObjectId, ref: 'Company' }\n\t}],\n\townedOrganization: [{\n\t\torg_id: { type: Schema.Types.ObjectId, ref: 'Organization' }\n\t}],\n\tcompanyWorking: [{\n\t\tcomp_id: { type: Schema.Types.ObjectId, ref: 'Company' }\n\t}],\n\tapplyJob: [{\n\t\tapply_job_id: { type: Schema.Types.ObjectId, ref: 'ApplyJob' }\n\t}],\n\tjobs: [{\n\t\tjob_id: { type: Schema.Types.ObjectId, ref: 'Jobs' },\n\t\tstatus: { type: String, lowercase: true }\n\t}],\n\torganization: { type: Schema.Types.ObjectId, ref: 'Organization' }\n}, { timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }})\n\nuserSchema.statics.sendUser = function(user) {\n\tuser.password = \"**********************************\"\n\treturn user\n}\n\n/*\n\tMethod's to encrypt and decrypt the password\n\t@params {password}\n\t@return {hashed password}\n*/\nuserSchema.methods.hashPassword = function(length = 64) {\n\tconst salt = new Buffer(new String(process.env.HASH_SECRET), 'base64')\n\tconst key = crypto.pbkdf2Sync(this.password, salt, 100000, length, 'sha512')\n\tthis.password = key.toString('hex')\n\tconsole.log(this.password)\n\treturn true\n}\n\nuserSchema.methods.verifyPassword = function(password, length = 64) {\n\tconst salt = new Buffer(new String(process.env.HASH_SECRET), 'base64')\n\tconst key = crypto.pbkdf2Sync(password, salt, 100000, length, 'sha512')\n\tconsole.log(key)\n\tconsole.log(this.password);\n\tif(this.password === key.toString('hex')) {\n\t\treturn true\n\t}\n\treturn false\n}\n\nexport const User = mongodb.model('User', userSchema)\n","import { AuthenticationError } from 'apollo-server-express'\nimport redis from \"redis\";\nimport {User} from \"./user.model\";\nimport {generateResult} from \"../utils/resuleGenerate\";\nimport {generateUser} from '../utils/resultUser'\nimport { generateJwtToken } from '../utils/jwt.auth'\nimport {generateToken} from \"../utils/tokenGenerate\";\n\n/**\n * @params { email, username, password }\n * @return { success, message }\n * Mutation to create user\n */\nconst signup = async (_, {input}, {mongodb}) => {\n\t/*\n\t\t// Validate before inserting\n\tconst result = ObjectCheck(input, \"email\", \"password\", \"username\", \"account\")\n\tif(!result) {\n\t\treturn generateResult(false, \"Please pass all required argument\")\n\t}\n\t*/\n\tconst oldUser = await User.findOne({ $or: [{email: input.email}, { username: input.username}]})\n\tif(oldUser) {\n\t\treturn generateUser(false, \"Email or Username is already taken\")\n\t}\n\tconst user = new User(input)\n\tuser.hashPassword()\n\tconst newUser = await user.save()\n\treturn generateUser(true, \"successfully created user\", newUser)\n}\n\n\n/**\n * @params { username, password }\n * @return { success, message }\n * Mutation to login user\n */\nconst login = async (_, {input}) => {\n\tconst user = await User.findOne({ $or: [{email: input.email}, { username: input.username}]})\n\tif(!user) {\n\t\treturn generateResult(false, \"No user exist with this username or email address\")\n\t}\n\tconst verified = user.verifyPassword(input.password)\n\tif(!verified) {\n\t\treturn generateResult(false, \"Password Wrong.\")\n\t}\n\tconst payload = {id: user.id, email: user.email, username: user.username, account_type: user.account.account_type}\n\tconst token = \"Bearer \" + generateJwtToken(payload)\n\treturn generateResult(true, token)\n}\n\n\n/**\n * @params { email, username }\n * @return { success, message }\n * Mutation to create password reset token\n */\nconst passwordToken = async (_, { input }, { redisClient }) => {\n\tconst email = input.email ? input.email : ''\n\tconst username = input.username ? input.username : ''\n\tconst user = await User.findOne({ $or: [{ email: email }, { username: username }]})\n\tif(!user) {\n\t\tif(email === '' && username === '') {\n\t\t\treturn generateResult(false, `Please pass email or username`)\n\t\t}\n\t\tif(email !== '') {\n\t\t\treturn generateResult(false, `no user exist for this ${email}`)\n\t\t}\n\t\tif(username !== '') {\n\t\t\treturn generateResult(false, `no user exist for this ${username}`)\n\t\t}\n\t}\n\tconst token = generateToken(50)\n\tif(email !== '') {\n\t\tredisClient.set(`${email}-password-reset`, token, redis.print)\n\t}\n\tif(username !== '') {\n\t\tredisClient.set(`${username}-password-reset`, token, redis.print)\n\t}\n\treturn generateResult(true, token)\n}\n\n\n/**\n * @params { token, username, email }\n * @return { success, message }\n * Mutation to confirm password reset token and generate token for updating password\n */\nconst confirmToken = async (_, { input }, { redisClient, getAsync }) => {\n\tconst token = input.token\n\tconst email = input.email ? input.email : ''\n\tconst username = input.username ? input.username : ''\n\tlet key = null\n\tif(email !== '') {\n\t\tkey = `${email}-password-reset`\n\t}\n\tif(username !== '') {\n\t\tkey = `${username}-password-reset`\n\t}\n\tif(key !== null) {\n\t\tconst isKey = redisClient.get(key, redis.print)\n\t\tif(!isKey) {\n\t\t\treturn generateResult(false, \"no value for provider key\")\n\t\t}\n\t}\n\tconst user = await User.findOne({$or: [{ email: email }, { username: username }]})\n\tif(!user) {\n\t\tif(email === '' && username === '') {\n\t\t\treturn generateResult(false, `Please pass email or username`)\n\t\t}\n\t\tif(email !== '') {\n\t\t\treturn generateResult(false, `no user exist for this ${email}`)\n\t\t}\n\t\tif(username !== '') {\n\t\t\treturn generateResult(false, `no user exist for this ${email}`)\n\t\t}\n\t}\n\tconst data = await getAsync(key)\n\tif(data !== token || data === null) {\n\t\treturn generateResult(false, \"Please pass valid token\")\n\t}\n\t// data is equal to token\n\tredisClient.del(key)\n\tconst newToken = generateToken(50)\n\tif(email !== '') {\n\t\tredisClient.set(`${email}-password-token`, newToken, redis.print)\n\t}\n\tif(username !== '') {\n\t\tredisClient.set(`${username}-password-token`, newToken, redis.print)\n\t}\n\treturn generateResult(true, newToken)\n}\n\n\n/**\n * @params { token, againPassword, password }\n * @return { success, message }\n * Mutation to confirm reset password with token\n */\nconst resetPassword = async (_, { input }, { redisClient, getAsync }) => {\n\tconst email = input.email ? input.email : ''\n\tconst username = input.username ? input.username : ''\n\tconst token = input.token\n\tlet key = null\n\tif(email !== '') {\n\t\tkey = `${email}-password-token`\n\t}\n\tif(username !== '') {\n\t\tkey = `${username}-password-token`\n\t}\n\tconst user = await User.findOne({$or: [{ email: email }, { username: username }]})\n\tif(!user) {\n\t\tif(email === '' && username === '') {\n\t\t\treturn generateResult(false, `Please pass email or username`)\n\t\t}\n\t\tif(email !== '') {\n\t\t\treturn generateResult(false, `no user exist for this ${email}`)\n\t\t}\n\t\tif(username !== '') {\n\t\t\treturn generateResult(false, `no user exist for this ${username}`)\n\t\t}\n\t}\n\tconst data = await getAsync(key)\n\tif(data !== token || data === null) {\n\t\treturn generateResult(false, \"Please pass valid token\")\n\t}\n\tif(input.password !== input.againPassword) {\n\t\treturn generateResult(false, \"Wrong password match.\")\n\t}\n\tuser.password = input.password\n\tuser.hashPassword()\n\tawait user.save()\n\tredisClient.del(key)\n\treturn generateResult(true, \"Successfully updated the password\")\n}\n\n\n/**\n * @params { email, username }\n * @return { success, message }\n * Mutation to create username or email (unique across the database)\n */\nconst changeUsername = async (_, { input }, { redisClient, getAsync, user}) => {\n\t// Check for authentication before proceding\n\tif(!user.username) {\n\t\t// throw auth error\n\t\tthrow new AuthenticationError('must authenticate')\n\t}\n\tconst email = input.email ? input.email : ''\n\tconst username = input.username ? input.username : ''\n\tif(email === '' && username === '') {\n\t\treturn generateResult(false, `Please pass email or username`)\n\t}\n\tconst returnUser = await User.findOne({$or: [{ email: email }, { username: username }]})\n\tif(returnUser) {\n\t\tif(email !== '') {\n\t\t\tif(user.email === returnUser.email) {\n\t\t\t\treturn generateResult(true, \"You updated your own email\")\n\t\t\t}\n\t\t\treturn generateResult(false, `user exist for this ${email}`)\n\t\t}\n\t\tif(username !== '') {\n\t\t\tif(user.username === returnUser.username) {\n\t\t\t\treturn generateResult(true, \"You updated your own username\")\n\t\t\t}\n\t\t\treturn generateResult(false, `user exist for this ${username}`)\n\t\t}\n\t}\n\t// user does not exist with the provided detals so let's proceed with update\n\tif(username !== '') {\n\t\t// Check weather previous user exist's or not\n\t\tconst sameUserReturn = await User.findOne({ email: user.email })\n\t\tsameUserReturn.username = username\n\t\tawait sameUserReturn.save()\n\t}\n\tif(email !== '') {\n\t\t// Check weather previous user exist's or not\n\t\tconst sameUserReturn = await User.findOne({ username: user.username })\n\t\tsameUserReturn.email = email\n\t\tawait sameUserReturn.save()\n\t}\n\treturn generateResult(true, \"Successfully updated\")\n}\n\nexport const UserMutations = {\n\tMutation: {\n\t\tsignup,\n\t\tlogin,\n\t\tpasswordToken,\n\t\tconfirmToken,\n\t\tresetPassword,\n\t\tchangeUsername\n\t}\n}\n","import redis from 'redis'\nimport  { AuthenticationError } from 'apollo-server-express'\nimport { User } from './user.model'\nimport { Organization } from '../organization/organization.model'\n\n/* Util method's here */\nimport { generateToken } from '../utils/tokenGenerate'\nimport { generateResult } from '../utils/resuleGenerate'\nimport { ObjectCheck } from '../utils/helper'\n\n/**\n * Below are the Query Functions\n */\n\n/**\n * @params { email }\n * @return { success, message }\n * Query to check email exists's or not\n */\nconst checkEmail = async (_, { email }) => {\n\tconst user = await User.findOne({ email: email })\n\tif(!user) {\n\t\treturn generateResult(false, \"no use exist for it\")\n\t}\n\treturn generateResult(true, \"email exists\")\n}\n\n\n/**\n * @params { email }\n * @return { success, message }\n * Query to check username exists's or not\n */\nconst checkUser = async (_, { username }) => {\n\tconst user = await User.findOne({ username: username })\n\tif(!user) {\n\t\treturn generateResult(false, \"no user exist for it\")\n\t}\n\treturn generateResult(true, \"username exists\")\n}\n\n\nconst currentUser = async (_, __, { user }) => {\n\tif(user == undefined || !user.username) {\n\t\tthrow new AuthenticationError('must authenticate')\n\t}\n\tconst ruser = await User.findById(user.id)\n\tif(!ruser) {\n\t\treturn generateResult(false, \"System Error\")\n\t}\n\treturn ruser\n}\n\n\nconst getUser = async (_, { id }, { user }) => {\n\tif(!user || !user.username) {\n\t\tthrow new AuthenticationError('must authenticate')\n\t}\n\tconst ruser = await User.findById(id).populate('organization').populate('organization.created_by')\n\tif(!ruser) {\n\t\treturn generateResult(false, \"System Error\")\n\t}\n\treturn ruser\n}\n\n\nconst getAllUser = async (_, __, { user }) => {\n\tconst users = await User.find({})\n\treturn users\n}\n\n\nexport const UserQuery = {\n\tQuery: {\n\t\tgetMe: () => \"New User\",\n\t\tcheckEmail,\n\t\tcheckUser,\n\t\tcurrentUser,\n\t\tgetUser,\n\t\tgetAllUser\n\t},\n\tUser: {\n\t\tnotification: (rootUser) => {\n\t\t\t// make query for nested fields inside user\n\t\t\treturn {\n\t\t\t\tjob_posting: {\n\t\t\t\t\tstatus: rootUser.notification.job_posting.status\n\t\t\t\t},\n\t\t\t\tcompany_promotion: {\n\t\t\t\t\tstatus: rootUser.notification.company_promotion.status\n\t\t\t\t},\n\t\t\t\tmessage: {\n\t\t\t\t\tstatus: rootUser.notification.message.status\n\t\t\t\t},\n\t\t\t\tmail: {\n\t\t\t\t\tstatus: rootUser.notification.mail.status\n\t\t\t\t},\n\t\t\t\tcomment: {\n\t\t\t\t\tstatus: rootUser.notification.comment.status\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\taccount: (rootUser) => {\n\t\t\treturn rootUser.account\n\t\t},\n\t\tsocial_urls: (rootUser) => {\n\t\t\treturn rootUser.social_urls\n\t\t},\n\t\torganization: (rootUser) => {\n\t\t\treturn rootUser.organization\n\t\t}\n\t}\n}\n","/*\n\t@object, @[property]\n\t@return boolean\n*/\nconst ObjectCheck = (obj, ...lists) => {\n\t// list is an array\n\tlet result = true\n\tlet keys = Object.keys(obj)\n\tlists.forEach(list => {\n\t\tif(!(keys.includes(list))) {\n\t\t\tresult = false\n\t\t\treturn\n\t\t}\n\t})\n\treturn result\n}\n\nexport {\n\tObjectCheck\n}\n","import fs from 'fs'\nimport path from 'path'\nimport jwt from 'jsonwebtoken'\n\n\n// sign the request\nconst privateCert = fs.readFileSync(path.resolve(__dirname, 'private.key'))\nexport const generateJwtToken = (payload, cert = privateCert) => {\n\treturn jwt.sign(\n\t\tpayload,\n\t\tcert,\n\t\t{\n\t\t\talgorithm: 'RS256',\n\t\t\texpiresIn: '30d'\n\t\t}\n\t)\n}\n\n// verify the request\nconst publicCert = fs.readFileSync(path.resolve(__dirname, 'public.key'))\nexport const verifyJwtToken = (token, cert = publicCert) => {\n\ttry {\n\t\treturn jwt.verify(\n\t\t\ttoken,\n\t\t\tcert\n\t\t)\n\t} catch(e) {\n\t\tconsole.log(e)\n\t}\n}\n","export const generateResult = (status, message) => {\n\treturn {\n\t\tstatus,\n\t\tmessage\n\t}\n}\n","export const generateUser = (status, message, user) => {\n\treturn {\n\t\tstatus,\n\t\tmessage,\n\t\tuser\n\t}\n}\n","import crypto from 'crypto'\n\nexport const generateToken = (size) => {\n\tconst buf = crypto.randomBytes(size)\n\tconst token = buf.toString('hex')\n\treturn token\n}\n","import express from 'express'\nconst { ApolloEngine } = require(\"apollo-engine\")\nimport { auth } from './middlewares/jwt'\nimport { GraphQLServer } from './graphql'\nimport { resolveAll } from './db'\nconst app = express()\n\n/*\nimport for config custom middlewares\n*/\nimport middlewares from './middlewares/index'\nmiddlewares(app)\n\nresolveAll() /* resolves all database connections */\n/*\nimport for config custom modules\n*/\nimport config from '../config/index'\nconfig(app)\n\n//Mount a jwt or other authentication middleware that is run before the GraphQL execution\n// app.use('/graphql', auth)\nGraphQLServer.applyMiddleware({ /* graphql configuration */\n\tapp,\n\tpath: '/graphql'\n})\n\nconst GraphQLEngine = new ApolloEngine({\n\tapiKey: process.env.APOLLO_ENGINE_KEY\n})\n\nexport {\n\tGraphQLServer,\n\tGraphQLEngine\n}\nexport default app\n","module.exports = require(\"@sendgrid/mail\");","module.exports = require(\"@sentry/node\");","module.exports = require(\"apollo-engine\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"babel-runtime/core-js/promise\");","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/helpers/defineProperty\");","module.exports = require(\"babel-runtime/helpers/taggedTemplateLiteral\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"body-parser\");","module.exports = require(\"cluster\");","module.exports = require(\"compression\");","module.exports = require(\"cors\");","module.exports = require(\"crypto\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"graphql\");","module.exports = require(\"graphql-log\");","module.exports = require(\"helmet\");","module.exports = require(\"host-validation\");","module.exports = require(\"hpp\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lodash\");","module.exports = require(\"logrocket\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"redis\");","module.exports = require(\"rotating-file-stream\");","module.exports = require(\"sequelize\");","module.exports = require(\"toobusy-js\");","module.exports = require(\"util\");"],"sourceRoot":""}